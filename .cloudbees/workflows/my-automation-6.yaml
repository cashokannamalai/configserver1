apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My automation
on:
  workflow_dispatch:

jobs:
  Build:
    outputs:
      unitTestResults: ${{ steps.RunUnitTest.outputs.mvn_test_stdio1 }}
      commit_id: ${{ steps.commitinfo.outputs.commit_id }}
      commit_msg: ${{ steps.commitinfo.outputs.commit_msg }}
    steps:
      - name: Configure git
        uses: docker://alpine/git:latest
        run: |
          git config --global user.email "c_aannamalai@cloudbees.com"
          git config --global user.name "cashokannamalai"
          git config --global --add safe.directory /cloudbees/workspace

      - name: Checkout code
        uses: cloudbees-io/checkout@v1

      - name: Commit changes with JIRA key
        id: commit_changes
        uses: docker://alpine/git:latest
        run: |
          JIRA_KEY="CBDEMO-152"
          git add .
          # Check if there are any changes before committing
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "$JIRA_KEY: Commit message describing changes"
            git push origin main
          else
            echo "No changes to commit."
      
      - name: Get Commit Info
        uses: docker://alpine/git:latest
        id: commitinfo
        run: |
          COMMIT_ID=$(git rev-parse HEAD)
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "commit_id=${COMMIT_ID}" >> $CLOUDBEES_OUTPUTS/commit_id
          echo "commit_msg=${COMMIT_MSG}" >> $CLOUDBEES_OUTPUTS/commit_msg

      - name: Build Project
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn clean install

  StaticAnalysis:
    needs: Build
    outputs:
      BLOCKER_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.BLOCKER_COUNT }}
      CRITICAL_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.CRITICAL_COUNT }}
      MAJOR_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.MAJOR_COUNT }}
      MINOR_COUNT: ${{ steps.FetchSonarQubeIssues.outputs.MINOR_COUNT }}
    steps:
      - name: Checkout code
        uses: cloudbees-io/checkout@v1

      - name: Run SonarQube Analysis
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn sonar:sonar -Dsonar.projectKey=myproject \
            -Dsonar.host.url=https://sonarqube.mycompany.com \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Fetch SonarQube Issues
        uses: docker://alpine/git:latest
        id: FetchSonarQubeIssues
        run: |
          # Fetch issues from SonarQube (assumes a script or API call here)
          BLOCKER_COUNT=$(curl -s "https://sonarqube.mycompany.com/api/issues/search?severity=BLOCKER" | jq '.total')
          CRITICAL_COUNT=$(curl -s "https://sonarqube.mycompany.com/api/issues/search?severity=CRITICAL" | jq '.total')
          MAJOR_COUNT=$(curl -s "https://sonarqube.mycompany.com/api/issues/search?severity=MAJOR" | jq '.total')
          MINOR_COUNT=$(curl -s "https://sonarqube.mycompany.com/api/issues/search?severity=MINOR" | jq '.total')
          echo "BLOCKER_COUNT=${BLOCKER_COUNT}" >> $CLOUDBEES_OUTPUTS/BLOCKER_COUNT
          echo "CRITICAL_COUNT=${CRITICAL_COUNT}" >> $CLOUDBEES_OUTPUTS/CRITICAL_COUNT
          echo "MAJOR_COUNT=${MAJOR_COUNT}" >> $CLOUDBEES_OUTPUTS/MAJOR_COUNT
          echo "MINOR_COUNT=${MINOR_COUNT}" >> $CLOUDBEES_OUTPUTS/MINOR_COUNT

  ArtifactPublish:
    needs: Build
    steps:
      - name: Configure git
        uses: docker://alpine/git:latest
        run: |
          git config --global user.email "c_aannamalai@cloudbees.com"
          git config --global user.name "cashokannamalai"
          git config --global --add safe.directory /cloudbees/workspace

      - name: Checkout code
        uses: cloudbees-io/checkout@v1

      - name: Commit changes with JIRA key
        id: commit_changes
        uses: docker://alpine/git:latest
        run: |
          JIRA_KEY="CBDEMO-152"
          git add .
          # Check if there are any changes before committing
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "$JIRA_KEY: Commit message describing changes"
            git push origin main
          else
            echo "No changes to commit."

      - name: Publish Artifact to Nexus
        uses: docker://maven:3-eclipse-temurin-17
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        run: |
          mvn deploy \
            -DaltDeploymentRepository=nexus::default::https://${NEXUS_USERNAME}:${NEXUS_PASSWORD}@nexus.cb-demos.io/repository/Petclinic/
